version: '3.8'

networks:
  ssadapter:
    driver: bridge

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2023-12-09T18-17-51Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: [ "CMD", "mc", "ready", "local" ]
    interval: 5s
    timeout: 5s
    retries: 5

services:
  ssadapterdbhost-tvdt:
    container_name: ssadapterdbhost-tvdt
    hostname: ssadapterdbhost-tvdt
    image: postgres:12
    env_file:
      - ./.env
    ports:
      - $POSTGRES_EXTERNAL_PORT:$POSTGRES_INTERNAL_PORT
    networks:
      ssadapter: null
    restart: unless-stopped
    volumes:
      - $MOUNT_PGDATA:$PGDATA
  ssadapterapi-tvdt:
    container_name: ssadapterapi-tvdt
    hostname: ssadapterapi-tvdt
    env_file:
      - ./.env
    build:
      context: ./ssadapter
      dockerfile: Dockerfile
      args:
        - SERVER_INTERNAL_PORT=$SERVER_INTERNAL_PORT
        - POSTGRES_HOST=$POSTGRES_HOST
        - POSTGRES_INTERNAL_PORT=$POSTGRES_INTERNAL_PORT
        - POSTGRES_DB=$POSTGRES_DB
        - POSTGRES_USER=$POSTGRES_USER
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - API_WORK_DIR=$API_WORK_DIR
    depends_on:
      - ssadapterdbhost-tvdt
    ports:
      - $SERVER_EXTERNAL_PORT:$SERVER_INTERNAL_PORT
    networks:
      ssadapter: null
    restart: unless-stopped
    volumes:
      - ./ssadapter/src/main/:$API_WORK_DIR/src/main
      - ./ssadapter/src/test:$API_WORK_DIR/src/test
      - ./ssadapter/target:$API_WORK_DIR/target
      - ./ssadapter/libs:$API_WORK_DIR/libs
      - ./ssadapter/:$API_WORK_DIR
  ssadapterweb-tvdt:
    container_name: ssadapterweb-tvdt
    hostname: ssadapterweb-tvdt
    env_file:
      - ./.env
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - WEB_WORK_DIR=$WEB_WORK_DIR
    ports:
      - $WEB_EXTERNAL_PORT:$WEB_INTERNAL_PORT
    volumes:
      - ./web/src:$WEB_WORK_DIR/src
      - ./web/config:$WEB_WORK_DIR/config
    networks:
      ssadapter: null
    restart: unless-stopped

  # starts 4 docker containers running minio server instances.
  # using nginx reverse proxy, load balancing, you can access
  # it through port 9000.
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - ./minio/data/data1-1:/data1
      - ./minio/data/data1-2:/data2
    networks:
      ssadapter: null

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ./minio/data/data2-1:/data1
      - ./minio/data/data2-2:/data2
    networks:
      ssadapter: null

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - ./minio/data/data3-1:/data1
      - ./minio/data/data3-2:/data2
    networks:
      ssadapter: null

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - ./minio/data/data4-1:/data1
      - ./minio/data/data4-2:/data2
    networks:
      ssadapter: null

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx-minio
    volumes:
      - ./minio/nginx.conf:/etc/nginx/nginx.conf:rw
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      ssadapter: null
